import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;
import javax.swing.JPanel;


public abstract class CircuitCanvas {
	private static class CircuitArea extends JPanel {
		private static final long serialVersionUID = 5283408121493711494L;
		
		CircuitArea(int newXsize, int newYsize) {
			xstart = newxstart;
			ystart = newystart;
			xsize = newXsize;
			ysize = newYsize;
			xyg = newXyg;
			setBackground(new Color(250,250,240));
		}
		
		public void paintComponent(Graphics g) {
			super.paintComponent(g);
			g.setColor(Color.GREEN);
			g.drawLine(scaleX(0),0,scaleX(0),ysize);
			g.drawLine(0,scaleY(0),xsize,scaleY(0));
			int i = 1;
			g.setColor(Color.BLACK);
			while (xyg.getPoint(i) != null) {
				if (i > 0 && xyg.getPoint(i-1).drawFrom() && xyg.getPoint(i).drawTo()){
					g.drawLine(getScaledX(i-1),getScaledY(i-1),getScaledX(i),getScaledY(i));
				}
				++i;
			}
		}
	}
	
	private static class CircuitWindow implements ActionListener {
		
		private JFrame frame;
		private CircuitArea plane;
		
		CircuitWindow(int xsize, int ysize) { //so when code is copied, old constructor isn't used by accident
			JFrame.setDefaultLookAndFeelDecorated(false);
			frame = new JFrame("Grapher");
			frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			
			plane = new CircuitArea(xsize, ysize);
			plane.setPreferredSize(new Dimension(xsize, ysize));
			plane.repaint();
			
			frame.setContentPane(plane);
			frame.pack();
			frame.setVisible(true);
		}
		
		public void actionPerformed(ActionEvent arg0) { }
	}
}
